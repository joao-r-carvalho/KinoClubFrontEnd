{"version":3,"sources":["Resources/film.svg","Resources/Spoilers.jpg","Components/Common/Clock.js","Components/Common/LoginWidget.js","Components/Common/TopBanner.js","Properties.js","Components/Movies/MoviePresentation.js","Components/Movies/MovieCarousel.js","Pages/Home.js","Pages/Authentication/Login.js","Components/Common/BottomBanner.js","Pages/Movies/MovieHero.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Clock","props","state","date","Date","this","timerID","setInterval","tick","clearInterval","setState","toLocaleTimeString","React","Component","LoginWidget","handleLoginClick","bind","handleLogoutClick","isLoggedIn","username","body","onClick","className","to","process","tag","TopBanner","src","Film","properties","MoviePresentation","isImageHidden","error","isLoaded","MovieDescription","MovieTitle","MovieImageURL","ToggleImage","AccessURL","MovieId","axios","get","then","res","data","Description","Title","Image","message","Spoilers","rowSpan","MovieCarousel","MovieList","FirstItem","ToShow","FilmsToFetch","handleCarrouselShift","shift","Position","length","map","x","JSON","parse","BegginingPosition","FinalPosition","Overflow","MoviesToShow","slice","Math","min","concat","innerDivs","Movie","index","key","_id","$oid","Home","Login","BottomBanner","id","MovieHero","match","params","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.4d4324f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/film.5e57d8a2.svg\";","module.exports = __webpack_public_path__ + \"static/media/Spoilers.0b7f3581.jpg\";","import React from 'react';\r\n\r\nclass Clock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: new Date()\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.tick(),\r\n            1000\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n\r\n    }\r\n\r\n    tick() {\r\n        this.setState({\r\n            date: new Date()\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <h2 >It is {this.state.date.toLocaleTimeString()} </h2>\r\n        )\r\n    }\r\n}\r\nexport default Clock;\r\n","import React from 'react';\r\nimport '../../Style/Common.css';\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass LoginWidget extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleLoginClick = this.handleLoginClick.bind(this);\r\n        this.handleLogoutClick = this.handleLogoutClick.bind(this);\r\n        this.state = {\r\n            isLoggedIn: false,\r\n            username: \"Jo√£o Carvalho\"\r\n        }\r\n    }\r\n    handleLoginClick() {\r\n\r\n        this.setState({ isLoggedIn: true });\r\n    }\r\n    handleLogoutClick() {\r\n        this.setState ({\r\n            isLoggedIn: false\r\n        })\r\n    }\r\n    render() {\r\n        let body;\r\n\r\n        if (this.state.isLoggedIn) {\r\n            body = <div><h2>Welcome {this.state.username}</h2>\r\n                <button onClick={this.handleLogoutClick} className=\"KinoButton KinoButton-Secondary\">Logout</button></div>;\r\n\r\n        } else {\r\n            body = <div>\r\n                <Link to={process.env.PUBLIC_URL + '/Login'} className=\"KinoButton KinoButton-Main\" tag=\"button\">Login</Link>\r\n                <button className=\"KinoButton KinoButton-Secondary\">Signup</button></div>;\r\n\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {body}\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default LoginWidget; ","import React from 'react';\r\nimport  '../../Style/Common.css';\r\nimport Clock from '../Common/Clock.js';\r\nimport LoginWidget from './LoginWidget.js';\r\nimport {Link} from 'react-router-dom'\r\nimport Film from '../../Resources/film.svg'\r\n\r\nclass TopBanner extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"TopBanner\">\r\n                \r\n                <Link className=\"Flex\" to={process.env.PUBLIC_URL + '/'}><img className=\"HomeIcon\" src={Film}></img></Link>\r\n                \r\n\r\n\r\n\r\n                <LoginWidget />\r\n\r\n\r\n            </div>)\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default TopBanner;","export const properties = {\r\n    BaseURL: \"https://kinoclub-1595860726231.azurewebsites.net\"\r\n};","import React from 'react';\r\nimport Spoilers from '../../Resources/Spoilers.jpg'\r\nimport axios from 'axios';\r\nimport { properties } from '../../Properties.js'\r\nclass MoviePresentation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isImageHidden: true,\r\n            error: null,\r\n            isLoaded: false,\r\n            MovieDescription: null,\r\n            MovieTitle: null,\r\n            MovieImageURL: null\r\n        }\r\n        this.ToggleImage = this.ToggleImage.bind(this);\r\n\r\n    }\r\n    componentDidMount() {\r\n\r\n\r\n        var AccessURL = properties.BaseURL + \"/Movies/\" + (this.props.MovieId == \"\" ? \"Random\" : this.props.MovieId);\r\n\r\n\r\n        axios.get(AccessURL)\r\n            .then(res => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    MovieDescription: res.data.Description,\r\n                    MovieTitle: res.data.Title,\r\n                    MovieImageURL: res.data.Image,\r\n                })\r\n            }, (error) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                })\r\n            }\r\n            )\r\n\r\n    }\r\n    ToggleImage() {\r\n        this.setState(state => ({\r\n            isImageHidden: !this.state.isImageHidden\r\n        }));\r\n\r\n    }\r\n    render() {\r\n        if (this.state.error) {\r\n            return <div>Error: {this.state.error.message}</div>;\r\n        } else if (!this.state.isLoaded) {\r\n            return <div>Loading... </div>;\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <img src={this.state.isImageHidden ? Spoilers : this.state.MovieImageURL}\r\n                                        onClick={this.ToggleImage} >\r\n\r\n                                    </img>\r\n                                </td>\r\n                                <td rowSpan='3'>\r\n                                    <h1> {this.state.MovieTitle} </h1>\r\n                                    <p>{this.state.MovieDescription}</p>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default MoviePresentation;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { properties } from '../../Properties'\r\nimport '../../Style/Common.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass MovieCarousel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoaded: false,\r\n            MovieList: [],\r\n            FirstItem: 0,\r\n            ToShow: 3,\r\n            FilmsToFetch: 10\r\n        }\r\n        this.handleCarrouselShift = this.handleCarrouselShift.bind(this);\r\n    }\r\n    handleCarrouselShift(shift) {\r\n\r\n        var Position = this.state.FirstItem + shift;\r\n        if (Position < 0) {\r\n            Position = this.state.MovieList.length - 1\r\n        }\r\n        Position = Position % this.state.MovieList.length;\r\n        this.setState({\r\n            FirstItem: Position\r\n        })\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        var counter;\r\n        axios.get(properties.BaseURL + \"/Movies/All\")\r\n            .then(res => {\r\n\r\n                this.setState({\r\n                    MovieList: res.data.map(x => JSON.parse(x))\r\n                })\r\n            }, (error) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                })\r\n            }\r\n            )\r\n        this.setState({\r\n            isLoaded: true\r\n        })\r\n    }\r\n    render() {\r\n        if (this.state.isLoaded) {\r\n            var BegginingPosition = this.state.FirstItem;\r\n            var FinalPosition = this.state.FirstItem + this.state.ToShow;\r\n            var Overflow = (FinalPosition - this.state.MovieList.length);\r\n            var MoviesToShow = this.state.MovieList.slice(BegginingPosition, Math.min(FinalPosition, this.state.MovieList.length));\r\n            if (Overflow > 0) {\r\n                MoviesToShow = MoviesToShow.concat(this.state.MovieList.slice(0, Overflow))\r\n            }\r\n\r\n            const innerDivs = MoviesToShow.map((Movie, index) =>\r\n                <div key={index} className='MovieBox'>\r\n                    <Link to={process.env.PUBLIC_URL + '/MovieHero/' + Movie._id.$oid} tag=\"div\">\r\n                        <img className='MoviePoster' src={Movie.Image}></img></Link>\r\n                </div>\r\n\r\n            )\r\n            return <div className='Flex'>\r\n                <button onClick={() => this.handleCarrouselShift(1)} className=\"KinoButton KinoButton-Main\"></button>\r\n                {innerDivs}\r\n                <button onClick={() => this.handleCarrouselShift(-1)} className=\"KinoButton KinoButton-Main\"></button>\r\n            </div>\r\n\r\n\r\n        } else {\r\n            return (<h1>Loading</h1>)\r\n\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default MovieCarousel;","import React from 'react';\r\nimport '../Style/Common.css'\r\nimport MoviePresentation from '../Components/Movies/MoviePresentation.js';\r\nimport MovieCarousel from '../Components/Movies/MovieCarousel'\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"MainLayout\">\r\n\r\n            <MovieCarousel />\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (<h1>Login form</h1>)\r\n\r\n    }\r\n\r\n}\r\nexport default Login;\r\n","import React from 'react';\r\nimport '../../Style/Common.css';\r\nimport Clock from './Clock';\r\nclass BottomBanner extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='BottomBanner'>\r\n                <Clock id=\"BottomClock\" />\r\n            </div>)\r\n    }\r\n\r\n}\r\nexport default BottomBanner;","import React from 'react'\r\nimport { properties } from '../../Properties';\r\nimport MoviePresentation from '../../Components/Movies/MoviePresentation';\r\nclass MovieHero extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n         return (\r\n            \r\n            <MoviePresentation MovieId={this.props.match.params.MovieId}/>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default MovieHero; ","import React from 'react';\r\nimport './Style/Common.css'\r\nimport './App.css';\r\nimport TopBanner from './Components/Common/TopBanner'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Home from './Pages/Home'\r\nimport Login from './Pages/Authentication/Login'\r\nimport BottomBanner from './Components/Common/BottomBanner';\r\nimport MovieHero from './Pages/Movies/MovieHero';\r\nfunction App() {\r\n  return (\r\n    <div className=\"MainLayout\">\r\n      <Router>\r\n        <TopBanner />\r\n        <Switch>\r\n              <Route exact path={process.env.PUBLIC_URL + '/'} component={Home} /> \r\n              <Route exact path={process.env.PUBLIC_URL + '/KinoClubFrontend'} component={Home} /> \r\n              <Route exact path={process.env.PUBLIC_URL + '/MovieHero/:MovieId'} component={MovieHero} /> \r\n\r\n              <Route exact path={process.env.PUBLIC_URL + '/Login'} component={Login} /> \r\n        </Switch>\r\n        <BottomBanner/>\r\n      </Router>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />  \r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  );\r\n\r\n\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}